# Simple production-ready Dockerfile for LifeBox API
FROM node:20-slim

# Install system dependencies including build tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    dumb-init curl python3 make g++ \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN groupadd --gid 1001 nodejs && useradd --uid 1001 --gid nodejs --shell /bin/bash --create-home lifebox

# Set working directory
WORKDIR /app

# Copy source code only (no node_modules)
COPY package*.json ./
COPY apps/ ./apps/
COPY libs/ ./libs/
COPY tsconfig.json ./
COPY turbo.json* ./

# Install dependencies without running scripts first
RUN npm install --ignore-scripts

# Install @prisma/client specifically and ensure proper workspace linking
RUN npm install @prisma/client
RUN cd libs/database && npm install @prisma/client

# Generate Prisma client in the correct location
RUN cd libs/database && npx prisma generate

# Verify Prisma client was generated correctly
RUN ls -la libs/database/node_modules/.prisma/client/ || echo "Prisma client not found in expected location"
RUN ls -la node_modules/.prisma/client/ || echo "Prisma client not found in root node_modules"

# Build the application
RUN cd apps/api && npm run build

# Create necessary directories
RUN mkdir -p uploads reports && chown -R lifebox:nodejs uploads reports

# Switch to non-root user
USER lifebox

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/api/v1/health || exit 1

# Start application
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "apps/api/dist/apps/api/src/main.js"]